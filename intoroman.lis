(defun intoroman (obj)
  (if (numberp obj)    
    (print (dec-to-roman obj))
    (format t "Parameter is not a number!")
  )
)

(defun dec-to-roman (number)
 (let ((int 0) (div 0) (output ()))
  (if (> number 3999)
    (format t "roman numbers only count to 3999")
    (setf int number)
  )
  
  (when (> (truncate int 1000) 0)
    (setf output (append output (roman-letter '(m))))
    (setf int (- int 1000))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (and (<= (- 1000 int) 100) (>= (- 1000 int) 1))
    (setf output (append output (roman-letter '(c))))
    (setf int (+ int 100))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (> (truncate int 500) 0)
    (setf output (append output (roman-letter '(d))))
    (setf int (- int 500))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (and (<= (- 500 int) 100) (>= (- 500 int) 1))
    (setf output (append output (roman-letter '(c))))
    (setf int (+ int 100))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (> (truncate int 100) 0)
    (setf output (append output (roman-letter '(c))))
    (setf int (- int 100))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (and (<= (- 100 int) 10) (>= (- 100 int) 1))
    (setf output (append output (roman-letter '(x))))
    (setf int (+ int 10))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )

  (when (> (truncate int 50) 0)
    (setf output (append output (roman-letter '(l))))
    (setf int (- int 50))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (and (<= (- 50 int) 10) (>= (- 50 int) 1))
    (setf output (append output (roman-letter '(x))))
    (setf int (+ int 10))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )

  (when (> (truncate int 10) 0)
    (setf output (append output (roman-letter '(x))))
    (setf int (- int 10))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
 
  (when (= (- 10 int) 1)
    (setf output (append output (roman-letter '(i))))
    (setf int (+ int 1))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
 
  (when (= (- 5 int) 1)
    (setf output (append output (roman-letter '(i))))
    (setf int (+ int 1))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
 
  (when (> (truncate int 5) 0)    
    (setf output (append output (roman-letter '(v))))
    (setf int (rem int 5))
    (setf output (append output (dec-to-roman int)))
    (setf int 0)
  )
  
  (when (and (< int 4) (> int 0))
    (setf output (append output (roman-letter '(i))))
    (setf int (- int 1))
    (setf output (append output (dec-to-roman int)))
  )  
 
  output
 )
)

(defun roman-letter (letter)
  letter)
  
(intoroman 2021)
